name: Build iPerf for Windows

env:
  VERSION: 3.18

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Install Cygwin and required packages via Chocolatey
    - name: Install Cygwin with dependencies
      run: |
        choco install cygwin --params "/InstallDir:C:\\cygwin /Packages:make,git,gcc-core,gcc-g++,libtool,automake,autoconf,dos2unix"

    # Step 3: Set Cygwin Path to ensure bash is found
    - name: Set Cygwin Path
      run: |
        echo "C:\\cygwin\\bin" >> $GITHUB_PATH

    # Step 4: Clone the iperf repository
    - name: Git clone iperf
      run: |
        C:\\cygwin\\bin\\bash.exe -lc "git clone -b ${{ env.VERSION }} https://github.com/esnet/iperf"

    # Step 5: Convert configure file from DOS to UNIX line endings
    - name: Convert configure script line endings
      run: |
        C:\\cygwin\\bin\\bash.exe -lc "dos2unix iperf/configure"

    # Step 6: Build iPerf for Windows with static linking
    - name: Build iPerf for Windows (Static)
      run: |
        C:\\cygwin\\bin\\bash.exe -lc "cd iperf && ./configure CFLAGS='-static' CXXFLAGS='-static' && make"

    # Step 7: Set date tag for packaging
    - name: Set variables
      run: |
        echo "TAG_DATE=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
      shell: bash

    # Step 8: Package the build into a zip file
    - name: Package
      run: |
        mkdir iperf-${{ env.VERSION }}-${{ env.TAG_DATE }}
        cp iperf/src/iperf3.exe iperf-${{ env.VERSION }}-${{ env.TAG_DATE }}
        cp C:\\cygwin\\bin\\cygwin1.dll iperf-${{ env.VERSION }}-${{ env.TAG_DATE }}
        zip -r iperf-${{ env.VERSION }}-${{ env.TAG_DATE }}.zip iperf-${{ env.VERSION }}-${{ env.TAG_DATE }}

    # Step 9: Upload the release asset
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: iperf-${{ env.VERSION }}-${{ env.TAG_DATE }}
        file: iperf-${{ env.VERSION }}-${{ env.TAG_DATE }}.zip
        asset_name: iperf-${{ env.VERSION }}-${{ env.TAG_DATE }}.zip
        prerelease: true
        overwrite: false
